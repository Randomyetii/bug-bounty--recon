name: Bug Bounty Recon Pipeline CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y golang-go masscan nmap
        
    - name: Install Go tools
      run: |
        go install github.com/OWASP/Amass/v4/...@v4.6.1
        go install github.com/projectdiscovery/httpx/cmd/httpx@v1.1.6
        go install github.com/projectdiscovery/nuclei/v3/cmd/nuclei@v3.8.11
        nuclei -update-templates
        
    - name: Make scripts executable
      run: |
        chmod +x recon.sh test_script.sh scripts/*.sh
        
    - name: Run syntax tests
      run: |
        bash -n recon.sh
        for script in scripts/*.sh; do bash -n "$script"; done
        
    - name: Run unit tests
      run: |
        ./test_script.sh
        
    - name: Test Docker build
      run: |
        docker build -t recon-pipeline-test .
        
    - name: Security scan
      uses: github/super-linter@v4
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_BASH: true
        VALIDATE_DOCKERFILE: true

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/bug-bounty-recon:latest
          ${{ secrets.DOCKER_USERNAME }}/bug-bounty-recon:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max